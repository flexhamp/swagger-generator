swagger: "2.0"
info:
  description: "This is a sample specification for user service"
  version: "1.0.0"
  title: "User Service contract"
host: "localhost"
basePath: ":8080"
schemes:
- "http"
tags:
  - name: "skill"
paths:
  /skill:
    get:
      tags:
        - "skill"
      summary: "Gets a list of skill"
      description: ""
      operationId: "getSkills"
      consumes:
      - "*/*"
      produces:
      - "application/json"
      responses:
        200:
         schema:
          type: "array"
          items:
            $ref: "#/definitions/Skill"
    post:
      tags:
        - "skill"
      summary: "Creates a new skill"
      operationId: "createSkill"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "skill"
        description: "The skill data"
        schema:
          $ref: "#/definitions/Skill"
      responses:
        200:
         schema:
          type: "array"
          items:
            $ref: "#/definitions/Skill"
#        201:
#          description: "User successfully created"
        400:
          description: "Validation error"
    delete:
      tags:
      - "skill"
      summary: "Deletes a skill"
      description: ""
      operationId: "deleteSkill"
      produces:
      - "application/json"
      parameters:
      - name: "skillId"
        in: "path"
        description: "Skill id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Skill"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Skill not found"
    put:
      tags:
      - "skill"
      summary: "Update an existing skill"
      description: ""
      operationId: "updateSkill"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "name"
        required: true
        schema:
          $ref: "#/definitions/Skill"
      responses:
        200:
         schema:
          type: "array"
          items:
            $ref: "#/definitions/Skill"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Skill not found"
        405:
          description: "Validation exception"
  /skill/{skillId}:
    get:
      tags:
      - "skill"
      summary: "Find skill by ID"
      description: "Returns a single skill"
      operationId: "getSkillById"
      produces:
      - "application/json"
      parameters:
      - name: "skillId"
        in: "path"
        description: "ID of skill to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Skill"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Skill not found"
definitions:
  Skill:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Java"
      study:
        type: "number"
        format: "float"
      progress:
        type: "number"
        format: "float"
#  ListSkillResponse:
#    type: "array"
#    items:
#      $ref: "#/definitions/Skill"